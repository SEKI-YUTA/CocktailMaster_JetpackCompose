name: Ktlint Check

on:
  push:
  pull_request:
    types:
      - opened
      - synchronize
permissions:
  pull-requests: write

jobs:
  ktlint-check:
    name: Run Ktlint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3.9.0
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run KtlintCheck
        run: |
          ./gradlew ktlintCk --continue

#          https://qiita.com/hohohoris/items/f934beb4ea0b432af488

      - uses: actions/upload-artifact@v3
        with:
          name: report
          path: build/report/*
          retention-days: 30

      - name: Run KtlintFormat
        run: |
          ./gradlew ktlintFmt --continue

      - uses: peter-evans/create-pull-request@v5
        with:
          token: ${{secrets.MY_GITHUB_TOKEN}}
          title: auto format ktlint
          commit-message: auto format ktlint
          draft: true
          delete-branch: true
          base: ${{ github.event.repository.default_branch }}
          branch: create-pull-request/ktlint-auto-run
          branch-suffix: timestamp

#コメントするテスト
#      - name: create text file
#        run: |
#          echo "GithubActions" > message.txt
#      - name: Comment PR

#        if: steps.ktlint.outputs.ktlint-result != 'null'
#        uses: thollander/actions-comment-pull-request@v2
#        with:
#          filePath: message.txt
#コメントするテスト

#      - name: Comment on PR if issues found
#        if: steps.ktlint.outputs.ktlint-result != 'null'
#        run: |
#          COMMENT="#### Ktlint Issues\n\`\`\`xml\n$(cat ktlint-checkstyle.xml)\n\`\`\`"
#          echo "$COMMENT" > comment.md
#          echo "Commenting on the PR..."
#          curl -sSL -H "Authorization: Bearer $GITHUB_TOKEN" -H "Content-Type: application/json" \
#            -X POST -d "{\"body\":\"$COMMENT\"}" \
#            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
